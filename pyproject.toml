[project]
name = "smilecms"
version = "0.1.0"
description = "Static-first publishing pipeline with Python builds and JSON-driven front-end."
requires-python = ">=3.11"
authors = [{name = "Matthew Craig"}]
dependencies = [
  "typer>=0.12",
  "pydantic>=2.7",
  "PyYAML>=6.0",
  "rich>=13.7",
  "jsonschema>=4.23",
  "Pillow>=10.3"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2",
  "mypy>=1.10",
  "ruff>=0.4",
  "timm==1.0.20",
  "coverage",
  "pre-commit",
  "pydantic", 
  "types-PyYAML"
]
ml = [
  "huggingface_hub[hf_xet]",
  "transformers>=4.41",
  "torch>=2.3"
]

[project.scripts]
smilecms = "build.cli:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["build*"]
exclude = ["content*", "media*", "site*", "web*"]

[tool.setuptools.package-data]
"build.schemas" = ["*.json"]

[tool.ruff]
line-length = 100
target-version = "py312"
lint.select = ["E","F","I","UP","B","SIM","PL","PT","RUF"]
lint.ignore = ["E203"]  # compatible with black-style spacing if you prefer
extend-exclude = ["build", "dist", ".venv"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "PT018",  # split assertions (fine to allow in tests)
  "PLR2004",# magic numbers in comparisons (okay in tests)
  "PLR0913",# too many args (test helpers often do)
  "E501",   # long lines (error messages/asserts can be long)
]

[tool.mypy]
python_version = "3.12"
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
no_implicit_optional = true
strict = true
plugins = ["pydantic.mypy"]
disallow_any_generics = true
exclude = ['build/','dist/','\.venv/']

# Keep core code strict, but don't force type annotations in tests
[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
check_untyped_defs = false
disable_error_code = ["misc"]  # silences "Untyped decorator makes function..."

[[tool.mypy.overrides]]
module = ["build.cli"]
disable_error_code = ["misc"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
fail_under = 80
show_missing = true
skip_covered = true

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"
